[tox]
envlist = py26, py27, py33, py34, docs, flake8

[testenv]
commands = python runtests.py {posargs:} unit performance memory examples
deps = -r{toxinidir}/requirements.txt
# Setting $TOX=yes tells runtests.py to remove the current directory from
# sys.path, so that the tests are guaranteed run against the Gruvi from the
# virtualenv. Important for getting repeatable results.
setenv = TOX=yes

[testenv:py26]
deps = {[testenv]deps}
    unittest2
    argparse

[testenv:docs]
commands = python runtests.py {posargs:} documentation
deps = {[testenv]deps}
    sphinx

[testenv:flake8]
commands = flake8 gruvi tests examples setup.py release.py
deps = cffi
    flake8

# Coverage runs in develop mode. This makes sure that the coverage report
# doesn't have long lib/python/site-packages directories inside it. It also
# takes care of the behavior of coverage where it tries to discover if the
# --source argument is a package or directory by stat()ing the file system.
# Given that there *is* a gruvi/ directory in the top-level source directory
# but which isn't the directory of the "gruvi" package from the virtualenv,
# the result is that --source=gruvi will not capture anything if run within
# a virtualenv.

[testenv:cov2]
usedevelop = True
basepython = python2
commands =
    coverage run --source=gruvi --append runtests.py -v unit examples
deps = {[testenv]deps}
    coverage

[testenv:cov3]
usedevelop = True
basepython = python3
commands =
    coverage run --source=gruvi --append runtests.py unit examples
deps = {[testenv]deps}
    coverage

[testenv:coverage]
commands =
    coverage erase
    invoke clean
    tox -e cov2
    invoke clean
    tox -e cov3
    invoke clean
deps = cffi
    tox
    coverage
    invoke
